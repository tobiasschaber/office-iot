



===================================================================
ELK ANBINDUNG
===================================================================
Ich habe 2 IOT Rules angelegt, eine für elk und eine mit elk für fehler (errors index!)

So ist die IOT Rule angelegt:

  SELECT *, timestamp() AS timestamp FROM '$aws/things/esp8266_1BED65/shadow/update/delta' 
	Elasticsearch Endpoint: https://search-motiondetect-ooamcmpqrjs.....aws.com
	ID: ${newuuid()}
	Index: motions
	Type: motion
	
Angepasste Regel, die alle Felder extrahiert, die für die Dynamo-DB benötigt werden:
SELECT *, timestamp() AS timestamp, clientToken as id, state.motionDetected as motionDetected FROM '$aws/things/esp8266_1BED65/shadow/update/delta'

Dynamo-DB Tabelle anlegen:
	name: motions
	iam-role: motions (update klicken!)
	id: id (string)
	sort: timestamp (number)


Passenden Index anlegen (mit datetime copier):
curl -i -X PUT -d '{  "mappings": {"motion":{"properties":{"clientToken":{"type":"textadata":{"properties":{"motionDetected":{"properties":{"timestamp":{"type":"long"}}}}},"state":{"properties":{"motionDetected":{"type":"long"}}},"timestamp":{"type":"long","copy_to":"datetime"},"version":{"type":"long"},"datetime": {"type":"date","store":true}}}  }}'  'https://search-motiondetect-ooamcmpqrbph3gksgvukfpura4.eu-central-1.es.amazonaws.com/motions' -H "Content-Type:application/json"

Index löschen:
curl -i -X DELETE 'https://search-motiondetect-ooamcmpqrbph3gksgvukfpura4.eu-central-1.es.amazonaws.com/motions'




===================================================================
STAND ENDE FREITAG
===================================================================
Ich habe eine CloudWatch Rule angelegt: "timeBasedRoomProcessorTrigger". Diese triggert minütlich eine Lambda.
	Schedule: Fixed rate of 1 minutes
	Description: Time based trigger which executes the motion lambda.
	Target: 
		Type: Lambda function
		Resource name: motionProcessor
		
Das Lambda ("motionProcessor") läuft mit dem "mvn package" von work/iot/motion/roomChecker
Es loggt einfach nur den Input als "Hello ..."
	Handler: de.codecentric.motion.roomcheck.CheckRoom::handleRequest
	Execution Role: Existing role service-role/testRole
	VPC: No VPC
Das geloggte ist sichtbar in CloudWatch -> Logs -> /aws/lambda/motionProcessor/2018/...
Unter lambda/Monitoring ist zu sehen wie oft das aufgerufen wurde

IOT: Die IOT Rule hat ein zusätzliches Target, das alle Einträge in DynamoDB schreibt.


DIE CLOUDWATCH RULE IST ABER DEAKTIVIERT ÜBERS WOCHENENDE !!!

Nächster Schritt wäre, die Events aus DynamoDB in der Java-Lambda auszulesen und dann den Google Kalender anzubinden.

	
 
===================================================================
LAMBDA
===================================================================
handler: de.codecentric.motion.roomcheck::checkRoom
trigger: cloudwatch event
	scheduled: cron(0 * * ? * *)


===================================================================
ÄNDERUNGEN AM LAMBDA
===================================================================
Ich habe umgestellt auf ein NodeJS Lambda, das hat dann auch soweit geklappt.
Ich konnte daraus auf die dynamodb zugreifen und Einträge lesen. das hat geklappt, ich konnte auf die
Events zugreifen, auch per query.

Danach habe ich versucht, die google calendar API aufzurufen, und zwar so wie ee
hier: https://www.npmjs.com/package/node-google-calendar beschrieben ist.
Ich habe einen Dienstaccount angelegt (Siehe hier: https://console.developers.google.com/apis/credentials?project=symbolic-rope-196114&organizationId=68929296454)
hier ein JSON heruntergeladen, in dem auch der private key und eine email-adresse enthalten ist ( so eine lange)
meinen Google KAlender habe ich dieser Adresse freigegeben.
Ich habe ein config file angelegt (/config/settings.js) und daneben das gedownloadete json gespeichert (google-api-keyfile.json)
die settings musste ich ein wenig anpassen, damit anstatt P.14 das json file akzeptiert wurde.
die lange mail adresse wurde als "SERVICE_ACCT_ID" eingetragen.

dazu habe ich ein calendarTest.js angelegt, welche alle Kalendereinträge lesen soll. diese liefert aus WebStorm ausgeführt
Sie enthält eine Liste CALENDAR_ID wo man mehrere Kalender eintragen kann. mein Standard Kalender von codecentric wurde dort eingetragen.
derzeit aber nur ein leeres Json zurück, mit einer items: [] Liste.

Fraglich ist derzeit, ob Oauth auch eingerichtet werden muss. (da ich den Kalender explizit freigegeben habe, würde ich erwarten, dass nicht...)
    
    -> SIehe docs/google calendar api doku!







